from flask import Flask, Response
import requests
import logging

# 初始化 Flask
app = Flask(__name__)

# 配置日志
logging.basicConfig(level=logging.INFO)

class Spider:
    def __init__(self):
        self.proxy = None  # 预留代理（如果需要）

    def liveContent(self):
        """获取直播列表，并转换成 M3U8 格式"""
        m3u_content = ['#EXTM3U']
        try:
            api_url = "https://gslbserv.itv.cmvideo.cn:80/live/list?pageSize=50&pageNumber=1&sort=time"
            response = requests.get(api_url, timeout=10)
            response.raise_for_status()  # 确保 HTTP 请求成功

            data = response.json()
            live_list = data.get("data", {}).get("list", [])

            if not live_list:
                app.logger.warning("API 返回数据为空")
                m3u_content.append("#EXT-X-ERROR: No live streams available")

            for item in live_list:
                hteam = item.get("home_team", "Unknown")
                ateam = item.get("away_team", "Unknown")
                event_name = item.get("event_name", "Unnamed Event")
                status = item.get("status", "Live")
                stream_url = item.get("stream_url", "")

                if stream_url:
                    extinf = f'#EXTINF:-1 tvg-name="{event_name}" group-title="{event_name}",{hteam} vs {ateam} {status}'
                    m3u_content.extend([extinf, stream_url])

        except requests.exceptions.RequestException as e:
            app.logger.error(f"API 请求失败: {str(e)}")
            m3u_content.append("#EXT-X-ERROR: Failed to retrieve live streams")

        return '\n'.join(m3u_content)

@app.route('/live.m3u8')
def get_live_m3u8():
    """返回直播的 M3U8 文件"""
    spider = Spider()
    content = spider.liveContent()
    return Response(content, mimetype="application/vnd.apple.mpegurl")

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
